//// Generated by Selenium IDE
//import io.github.bonigarcia.wdm.WebDriverManager;
//import org.junit.Test;
//import org.junit.Before;
//import org.junit.After;
//import static org.junit.Assert.*;
//import static org.hamcrest.CoreMatchers.is;
//import static org.hamcrest.core.IsNot.not;
//import org.openqa.selenium.By;
//import org.openqa.selenium.WebDriver;
//import org.openqa.selenium.firefox.FirefoxDriver;
//import org.openqa.selenium.chrome.ChromeDriver;
//import org.openqa.selenium.remote.RemoteWebDriver;
//import org.openqa.selenium.remote.DesiredCapabilities;
//import org.openqa.selenium.Dimension;
//import org.openqa.selenium.WebElement;
//import org.openqa.selenium.interactions.Actions;
//import org.openqa.selenium.support.ui.ExpectedConditions;
//import org.openqa.selenium.support.ui.WebDriverWait;
//import org.openqa.selenium.JavascriptExecutor;
//import org.openqa.selenium.Alert;
//import org.openqa.selenium.Keys;
//
//import java.time.Duration;
//import java.util.*;
//import java.net.MalformedURLException;
//import java.net.URL;
//public class cardTagTest {
//  private WebDriver driver;
//  private Map<String, Object> vars;
//  JavascriptExecutor js;
//  private WebDriverWait wait;
//  @Before
//  public void setUp() {
//    WebDriverManager.firefoxdriver().setup();
//    driver = new FirefoxDriver();
//    driver.manage().window().setSize(new Dimension(654, 751));
//    wait = new WebDriverWait(driver, Duration.ofSeconds(10));
//  }
//  @After
//  public void tearDown() {
//    driver.quit();
//  }
//  @Test
//  public void descriptioncard() {
//    driver.get("http://localhost:4000/sign_in");
//    driver.manage().window().setSize(new Dimension(943, 1063));
//    driver.findElement(By.cssSelector("button")).click();
////    driver.findElement(By.id("add_new_board")).click();
//    wait.until(ExpectedConditions.elementToBeClickable(By.id("add_new_board"))).click();
//    driver.findElement(By.id("board_name")).sendKeys("xzcz");
////    driver.findElement(By.cssSelector("button")).click();
//    wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector("button"))).click();
//    driver.findElement(By.cssSelector(".inner")).click();
//    driver.findElement(By.id("list_name")).sendKeys("asdac");
////    driver.findElement(By.cssSelector("button")).click();
//    wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector("button"))).click();
//    driver.findElement(By.linkText("Add a new card...")).click();
//    driver.findElement(By.id("card_name")).sendKeys("fasda");
////    driver.findElement(By.cssSelector("button")).click();
//    wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector("button"))).click();
//    {
//      WebElement element = wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector("button")));
//      Actions builder = new Actions(driver);
//      builder.moveToElement(element).perform();
//    }
////    driver.findElement(By.cssSelector(".card-content")).click();
//    wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(".card-content")));
//    driver.findElement(By.cssSelector(".button:nth-child(3) > span")).click();
//    driver.findElement(By.cssSelector(".green")).click();
//    {
//      List<WebElement> elements = driver.findElements(By.cssSelector(".tag:nth-child(2)"));
//      assert(elements.size() > 0);
//    }
//  }
//}

import io.github.bonigarcia.wdm.WebDriverManager;
import org.example.BoardsPage;
import org.example.CardPage;
import org.example.ListPage;
import org.example.SignInPage;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;

import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

import static org.junit.Assert.assertTrue;

public class CardTagTest {
  private WebDriver driver;
  private SignInPage signInPage;
  private BoardsPage boardsPage;
  private ListPage listPage;
  private CardPage cardPage;

  @Before
  public void setUp() {
    WebDriverManager.firefoxdriver().setup();
    driver = new FirefoxDriver();
    driver.manage().window().maximize();
    signInPage = new SignInPage(driver);
    boardsPage = new BoardsPage(driver);
    listPage = new ListPage(driver);
    cardPage = new CardPage(driver);
  }

  @After
  public void tearDown() {
    driver.quit();
  }

  @Test
  public void Test() {
    // Navigate to the sign-in page
    signInPage.navigateTo();

    // Resize window
    driver.manage().window().setSize(new Dimension(943, 1063));

    // Login (uncomment and provide valid credentials if needed)
    // signInPage.enterEmail("valid@email.com");
    // signInPage.enterPassword("validPassword");
    signInPage.clickLoginButton();
    System.out.println("Logged in. Current URL: " + driver.getCurrentUrl());

    // Create a new board
    boardsPage.clickAddNewBoard();
    boardsPage.enterBoardName("xzcz");
    boardsPage.clickSubmitButton();
    System.out.println("Board created");

    // Create a new list
    boardsPage.clickInner();
    boardsPage.enterListName("asdac");
    boardsPage.clickSubmitButton();
    System.out.println("List created");

    // Create a new card
    boardsPage.clickAddNewCardLink();
    boardsPage.enterCardName("fasda");
    boardsPage.clickSubmitButton();
    System.out.println("Card created");

    // Add a tag to the card
    cardPage.clickCardContent();
    System.out.println("Clicked card content. Current URL: " + driver.getCurrentUrl());
    cardPage.clickTagButton();
    System.out.println("Clicked tag button");
    cardPage.selectGreenTag();
    // Take screenshot for debugging
    try {
      File screenshot = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
      Files.copy(screenshot.toPath(), Paths.get("tag_screenshot.png"));
      System.out.println("Screenshot saved as tag_screenshot.png");
    } catch (Exception e) {
      System.out.println("Failed to save screenshot: " + e.getMessage());
    }

    // Save page source for debugging
    try {
      Files.writeString(Paths.get("tag_source.html"), driver.getPageSource());
      System.out.println("Page source saved as tag_source.html");
    } catch (Exception e) {
      System.out.println("Failed to save page source: " + e.getMessage());
    }

    // Verify the tag exists
    assertTrue("At least one tag should be present", cardPage.isTagPresent());
  }
}
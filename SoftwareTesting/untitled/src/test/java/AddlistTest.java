//// Generated by Selenium IDE
//import io.github.bonigarcia.wdm.WebDriverManager;
//import org.junit.Test;
//import org.junit.Before;
//import org.junit.After;
//import static org.junit.Assert.*;
//import static org.hamcrest.CoreMatchers.is;
//import static org.hamcrest.core.IsNot.not;
//import org.openqa.selenium.By;
//import org.openqa.selenium.WebDriver;
//import org.openqa.selenium.firefox.FirefoxDriver;
//import org.openqa.selenium.chrome.ChromeDriver;
//import org.openqa.selenium.remote.RemoteWebDriver;
//import org.openqa.selenium.remote.DesiredCapabilities;
//import org.openqa.selenium.Dimension;
//import org.openqa.selenium.WebElement;
//import org.openqa.selenium.interactions.Actions;
//import org.openqa.selenium.support.ui.ExpectedConditions;
//import org.openqa.selenium.support.ui.WebDriverWait;
//import org.openqa.selenium.JavascriptExecutor;
//import org.openqa.selenium.Alert;
//import org.openqa.selenium.Keys;
//
//import java.time.Duration;
//import java.util.*;
//import java.net.MalformedURLException;
//import java.net.URL;
//public class AddlistTest {
//  private WebDriver driver;
//  private Map<String, Object> vars;
//  JavascriptExecutor js;
//  @Before
//  public void setUp() {
//    WebDriverManager.firefoxdriver().setup();
//    driver = new FirefoxDriver();
//    driver.manage().window().setSize(new Dimension(654, 751));
//  }
//  @After
//  public void tearDown() {
//    driver.quit();
//  }
//  @Test
//  public void addlist() {
//    driver.get("http://localhost:4000/");
////    driver.manage().window().setSize(new Dimension(862, 704));
//    driver.findElement(By.cssSelector("#\\32-first > .inner")).click();
//    driver.findElement(By.cssSelector(".add-new > .inner")).click();
//    driver.findElement(By.id("list_name")).sendKeys("asdacascz");
//    driver.findElement(By.cssSelector("button")).click();
//  }
//}
// Generated by Selenium IDE
import io.github.bonigarcia.wdm.WebDriverManager;
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.time.Duration;
import java.util.*;

public class AddlistTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  private WebDriverWait wait;

  @Before
  public void setUp() {
    WebDriverManager.firefoxdriver().setup();
    driver = new FirefoxDriver();
    driver.manage().window().setSize(new Dimension(654, 751));
    wait = new WebDriverWait(driver, Duration.ofSeconds(10));
  }

  @After
  public void tearDown() {
    driver.quit();
  }

  @Test
  public void addlist() {
    driver.get("http://localhost:4000/");

    // Wait before first click
    WebElement firstList = wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector("#\\32-first > .inner")));
    firstList.click();

    // Wait before clicking "Add New"
    WebElement addNew = wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(".add-new > .inner")));
    addNew.click();

    // Wait for input field to be visible
    WebElement input = wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("list_name")));
    input.sendKeys("asdacascz");

    // Wait before clicking the submit button
    WebElement submitButton = wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector("button")));
    submitButton.click();

    // Optionally, verify the new list was added
    WebElement newList = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[contains(text(), 'asdacascz')]")));
    assertNotNull("New list should be visible after creation", newList);
  }
}

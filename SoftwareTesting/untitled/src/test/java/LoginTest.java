//// Generated by Selenium IDE
//import io.github.bonigarcia.wdm.WebDriverManager;
//import org.junit.Test;
//import org.junit.Before;
//import org.junit.After;
//import static org.junit.Assert.*;
//import static org.hamcrest.CoreMatchers.is;
//import static org.hamcrest.core.IsNot.not;
//import org.openqa.selenium.By;
//import org.openqa.selenium.WebDriver;
//import org.openqa.selenium.firefox.FirefoxDriver;
//import org.openqa.selenium.chrome.ChromeDriver;
//import org.openqa.selenium.remote.RemoteWebDriver;
//import org.openqa.selenium.remote.DesiredCapabilities;
//import org.openqa.selenium.Dimension;
//import org.openqa.selenium.WebElement;
//import org.openqa.selenium.interactions.Actions;
//import org.openqa.selenium.support.ui.ExpectedConditions;
//import org.openqa.selenium.support.ui.WebDriverWait;
//import org.openqa.selenium.JavascriptExecutor;
//import org.openqa.selenium.Alert;
//import org.openqa.selenium.Keys;
//
//import java.time.Duration;
//import java.util.*;
//import java.net.MalformedURLException;
//import java.net.URL;
//public class LoginTest {
//  private WebDriver driver;
//  private Map<String, Object> vars;
//  JavascriptExecutor js;
//  private WebDriverWait wait;
//  @Before
//  public void setUp() {
//    WebDriverManager.firefoxdriver().setup();
//    driver = new FirefoxDriver();
//    driver.manage().window().setSize(new Dimension(654, 751));
//    wait = new WebDriverWait(driver, Duration.ofSeconds(10));
//  }
//  @After
//  public void tearDown() {
//    driver.quit();
//  }
//  @Test
//  public void login() {
//    driver.get("http://localhost:4000/sign_in");
//    driver.manage().window().setSize(new Dimension(966, 622));
//    driver.findElement(By.cssSelector("button")).click();
//    WebElement nameSpan = wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector("span:nth-child(3)")));
//
//    assertThat(nameSpan.getText(), is("John Doe"));
//  }
//}

import io.github.bonigarcia.wdm.WebDriverManager;
import org.example.HomePage;
import org.example.SignInPage;
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.Dimension;

public class LoginTest {
  private WebDriver driver;
  private SignInPage signInPage;
  private HomePage homePage;

  @Before
  public void setUp() {
    WebDriverManager.firefoxdriver().setup();
    driver = new FirefoxDriver();
    driver.manage().window().setSize(new Dimension(654, 751));
    signInPage = new SignInPage(driver);
    homePage = new HomePage(driver);
  }

  @After
  public void tearDown() {
    driver.quit();
  }

  @Test
  public void login() {
    signInPage.navigateTo();
    driver.manage().window().setSize(new Dimension(966, 622));
    signInPage.clickLoginButton();
    assertThat(homePage.getDisplayedName(), is("John Doe"));
  }
  @Test
  public void signInWithoutEmail() {
    driver.get("http://localhost:4000/sign_in");
    signInPage.enterEmail("");
    signInPage.enterPassword("12345");
    signInPage.clickLoginButton();
    assertThat(signInPage.getEmailFieldValidationMessage(), is("Please fill out this field."));
  }

  @Test
  public void signInWithoutPassword() {
    driver.get("http://localhost:4000/sign_in");
//    signInPage.clickLoginButton();
    signInPage.enterPassword("12345");
    signInPage.clickLoginButton();
    assertThat(signInPage.getPasswordFieldValidationMessage(), is("Please fill out this field."));
  }
  @Test
  public void wrongPasswordLogin() {
    signInPage.navigateTo();
    driver.manage().window().setSize(new Dimension(810, 703));
    signInPage.enterPassword("admin");
    signInPage.clickLoginButton();
    assertThat(signInPage.getErrorMessage(), is("Invalid email or password"));
  }
  @Test
  public void wrongEmailLogin() {
    signInPage.navigateTo();
    driver.manage().window().setSize(new Dimension(810, 703));
    signInPage.enterEmail("sadzxczxc@gmail.com");
    signInPage.clickLoginButton();
    assertThat(signInPage.getErrorMessage(), is("Invalid email or password"));
  }
}
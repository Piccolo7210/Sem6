////// Generated by Selenium IDE
////import io.github.bonigarcia.wdm.WebDriverManager;
////import org.junit.Test;
////import org.junit.Before;
////import org.junit.After;
////import static org.junit.Assert.*;
////import static org.hamcrest.CoreMatchers.is;
////import static org.hamcrest.core.IsNot.not;
////import org.openqa.selenium.By;
////import org.openqa.selenium.WebDriver;
////import org.openqa.selenium.firefox.FirefoxDriver;
////import org.openqa.selenium.chrome.ChromeDriver;
////import org.openqa.selenium.remote.RemoteWebDriver;
////import org.openqa.selenium.remote.DesiredCapabilities;
////import org.openqa.selenium.Dimension;
////import org.openqa.selenium.WebElement;
////import org.openqa.selenium.interactions.Actions;
////import org.openqa.selenium.support.ui.ExpectedConditions;
////import org.openqa.selenium.support.ui.WebDriverWait;
////import org.openqa.selenium.JavascriptExecutor;
////import org.openqa.selenium.Alert;
////import org.openqa.selenium.Keys;
////
////import java.time.Duration;
////import java.util.*;
////import java.net.MalformedURLException;
////import java.net.URL;
////public class CardDescriptionTest {
////  private WebDriver driver;
////  private Map<String, Object> vars;
////  JavascriptExecutor js;
////  private WebDriverWait wait;
////  @Before
////  public void setUp() {
////    WebDriverManager.firefoxdriver().setup();
////    driver = new FirefoxDriver();
////    driver.manage().window().maximize();
////    wait = new WebDriverWait(driver, Duration.ofSeconds(10));
////  }
////  @After
////  public void tearDown() {
////    driver.quit();
////  }
////  @Test
////  public void cardDescription() {
////    driver.get("http://localhost:4000/sign_in");
////    driver.manage().window().setSize(new Dimension(1047, 1064));
////    driver.findElement(By.cssSelector("button")).click();
//////    driver.findElement(By.id("add_new_board")).click();
////    wait.until(ExpectedConditions.elementToBeClickable(By.id("add_new_board"))).click();
////    driver.findElement(By.id("board_name")).sendKeys("qewe");
//////    driver.findElement(By.cssSelector("button")).click();
////    wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector("button"))).click();
////    driver.findElement(By.cssSelector(".inner")).click();
////    driver.findElement(By.id("list_name")).sendKeys("sdfsdf");
////    driver.findElement(By.cssSelector("button")).click();
////    {
////      WebElement element = wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector("button")));
////      Actions builder = new Actions(driver);
////      builder.moveToElement(element).perform();
////    }
////    driver.findElement(By.linkText("Add a new card...")).click();
//////    driver.findElement(By.id("card_name")).sendKeys("btrte");
////    By cardNameInput = By.id("card_name");
////    WebElement cardNameElement = wait.until(ExpectedConditions.visibilityOfElementLocated(cardNameInput));
////    cardNameElement.sendKeys("btrte");
////    driver.findElement(By.cssSelector("button")).click();
////    driver.findElement(By.cssSelector(".card-content")).click();
////    driver.findElement(By.linkText("Edit")).click();
////    driver.findElement(By.cssSelector("textarea:nth-child(2)")).click();
////    driver.findElement(By.cssSelector("textarea:nth-child(2)")).sendKeys("tr");
////    driver.findElement(By.cssSelector("button:nth-child(3)")).click();
////  }
////}
//
//
//import io.github.bonigarcia.wdm.WebDriverManager;
//import org.example.BoardsPage;
//import org.example.ListPage;
//import org.example.SignInPage;
//import org.junit.After;
//import org.junit.Before;
//import org.junit.Test;
//import org.openqa.selenium.WebDriver;
//import org.openqa.selenium.firefox.FirefoxDriver;
//import org.openqa.selenium.Dimension;
//
//import static org.hamcrest.CoreMatchers.is;
//import static org.junit.Assert.assertThat;
//
//public class CardDescriptionTest {
//  private WebDriver driver;
//  private SignInPage signInPage;
//  private BoardsPage boardsPage;
//  private ListPage listPage;
//
//  @Before
//  public void setUp() {
//    WebDriverManager.firefoxdriver().setup();
//    driver = new FirefoxDriver();
//    driver.manage().window().maximize();
//    signInPage = new SignInPage(driver);
//    boardsPage = new BoardsPage(driver);
//    listPage = new ListPage(driver);
//  }
//
//  @After
//  public void tearDown() {
//    driver.quit();
//  }
//
//  @Test
//  public void cardDescription() {
//    // Navigate to the sign-in page
//    signInPage.navigateTo();
//
//    // Resize window
//    driver.manage().window().setSize(new Dimension(1047, 1064));
//
//    // Click login button (assuming pre-authenticated session)
//    signInPage.clickLoginButton();
//
//    // Create a new board
//    boardsPage.clickAddNewBoard();
//    boardsPage.enterBoardName("qewe");
//    boardsPage.clickSubmitButton();
//
//    // Create a new list
//    boardsPage.clickInner();
//    boardsPage.enterListName("sdfsdf");
//    boardsPage.clickSubmitButton();
//
//    // Create a new card
//    boardsPage.clickAddNewCardLink();
//    boardsPage.enterCardName("btrte");
//    boardsPage.clickSubmitButton();
//
//    // Edit card description
//    boardsPage.clickCardContent();
//    boardsPage.clickEditLink();
//    boardsPage.enterCardDescription("tr");
//    boardsPage.clickDescriptionSubmitButton();
//
//    // Verify the card description
//    assertThat(boardsPage.getCardCommentText(), is("tr"));
//  }
//}

//working


//import io.github.bonigarcia.wdm.WebDriverManager;
//import org.example.BoardsPage;
//import org.example.CardPage;
//import org.example.ListPage;
//import org.example.SignInPage;
//import org.junit.After;
//import org.junit.Before;
//import org.junit.Test;
//import org.openqa.selenium.WebDriver;
//import org.openqa.selenium.firefox.FirefoxDriver;
//import org.openqa.selenium.Dimension;
//import org.openqa.selenium.OutputType;
//import org.openqa.selenium.TakesScreenshot;
//
//import java.io.File;
//import java.nio.file.Files;
//import java.nio.file.Paths;
//
//import static org.hamcrest.CoreMatchers.is;
//import static org.junit.Assert.assertThat;
//
//public class CardDescriptionTest {
//  private WebDriver driver;
//  private SignInPage signInPage;
//  private BoardsPage boardsPage;
//  private ListPage listPage;
//  private CardPage cardPage;
//
//  @Before
//  public void setUp() {
//    WebDriverManager.firefoxdriver().setup();
//    driver = new FirefoxDriver();
//    driver.manage().window().maximize();
//    signInPage = new SignInPage(driver);
//    boardsPage = new BoardsPage(driver);
//    listPage = new ListPage(driver);
//    cardPage = new CardPage(driver);
//  }
//
//  @After
//  public void tearDown() {
//    driver.quit();
//  }
//
//  @Test
//  public void cardDescription() {
//    // Navigate to the sign-in page
//    signInPage.navigateTo();
//
//    // Resize window
//    driver.manage().window().setSize(new Dimension(1047, 1064));
//
//    // Click login button (assuming pre-authenticated session)
//    // If credentials are needed, uncomment and provide valid credentials
//    // signInPage.enterEmail("valid@email.com");
//    // signInPage.enterPassword("validPassword");
//    signInPage.clickLoginButton();
//    System.out.println("Logged in");
//
//    // Create a new board
//    boardsPage.clickAddNewBoard();
//    boardsPage.enterBoardName("qewe");
//    boardsPage.clickSubmitButton();
//    System.out.println("Board created");
//
//    // Create a new list
//    boardsPage.clickInner();
//    boardsPage.enterListName("sdfsdf");
//    boardsPage.clickSubmitButton();
//    System.out.println("List created");
//
//    // Create a new card
//    boardsPage.clickAddNewCardLink();
//    boardsPage.enterCardName("btrte");
//    boardsPage.clickSubmitButton();
//    System.out.println("Card created");
//
//    // Edit card description
//    cardPage.clickCardContent();
//    System.out.println("Clicked card content");
//    cardPage.clickEditLink();
//    System.out.println("Clicked edit link");
//    cardPage.enterDescription("tr");
//    System.out.println("Entered description");
//    cardPage.clickSubmitButton();
//    System.out.println("Submitted description");
//
//    // Take screenshot for debugging
//    try {
//      File screenshot = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
//      Files.copy(screenshot.toPath(), Paths.get("error_screenshot.png"));
//      System.out.println("Screenshot saved as error_screenshot.png");
//    } catch (Exception e) {
//      System.out.println("Failed to save screenshot: " + e.getMessage());
//    }
//
//    // Verify the card description
//    assertThat(cardPage.getDescriptionText(), is("tr"));
//  }
//}



import io.github.bonigarcia.wdm.WebDriverManager;
import org.example.BoardsPage;
import org.example.CardPage;
import org.example.ListPage;
import org.example.SignInPage;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;

import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

import static org.hamcrest.CoreMatchers.is;
import static org.junit.Assert.assertThat;

public class CardDescriptionTest {
  private WebDriver driver;
  private SignInPage signInPage;
  private BoardsPage boardsPage;
  private ListPage listPage;
  private CardPage cardPage;

  @Before
  public void setUp() {
    WebDriverManager.firefoxdriver().setup();
    driver = new FirefoxDriver();
    driver.manage().window().maximize();
    signInPage = new SignInPage(driver);
    boardsPage = new BoardsPage(driver);
    listPage = new ListPage(driver);
    cardPage = new CardPage(driver);
  }

  @After
  public void tearDown() {
    driver.quit();
  }

  @Test
  public void cardDescription() {
    // Navigate to the sign-in page
    signInPage.navigateTo();

    // Resize window
    driver.manage().window().setSize(new Dimension(1047, 1064));

    // Login (uncomment and provide valid credentials if needed)
    // signInPage.enterEmail("valid@email.com");
    // signInPage.enterPassword("validPassword");
    signInPage.clickLoginButton();
    System.out.println("Logged in. Current URL: " + driver.getCurrentUrl());

    // Create a new board
    boardsPage.clickAddNewBoard();
    boardsPage.enterBoardName("qewe");
    boardsPage.clickSubmitButton();
    System.out.println("Board created");

    // Create a new list
    boardsPage.clickInner();
    boardsPage.enterListName("sdfsdf");
    boardsPage.clickSubmitButton();
    System.out.println("List created");

    // Create a new card
    boardsPage.clickAddNewCardLink();
    boardsPage.enterCardName("btrte");
    boardsPage.clickSubmitButton();
    System.out.println("Card created");

    // Edit card description
    cardPage.clickCardContent();
    System.out.println("Clicked card content");
    cardPage.clickEditLink();
    System.out.println("Clicked edit link. Current URL: " + driver.getCurrentUrl());

    // Check if textarea is present
    System.out.println("Is description textarea present? " + cardPage.isDescriptionTextareaPresent());
    if (!cardPage.isDescriptionTextareaPresent()) {
      try {
        Files.write(Paths.get("page_source.html"), driver.getPageSource().getBytes());
        System.out.println("Page source saved as page_source.html");
      } catch (Exception e) {
        System.out.println("Failed to save page source: " + e.getMessage());
      }
    }

    // Uncomment if a description tab or modal trigger is needed
    // cardPage.clickDescriptionTab();

    cardPage.enterDescription("tr");
    System.out.println("Entered description");
    cardPage.clickSubmitButton();
    System.out.println("Submitted description");

    // Take screenshot for debugging
    try {
      File screenshot = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
      Files.copy(screenshot.toPath(), Paths.get("error_screenshot.png"));
      System.out.println("Screenshot saved as error_screenshot.png");
    } catch (Exception e) {
      System.out.println("Failed to save screenshot: " + e.getMessage());
    }

    // Verify the card description
    assertThat(cardPage.getDescriptionText(), is("tr"));
  }
}